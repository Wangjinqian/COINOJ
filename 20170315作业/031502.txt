#include <iostream>

#include <iomanip>

using namespace std;

class Shape {
private:
    static int NumOfShapes;
public:
    Shape() {
        NumOfShapes++;
        cout << "A shape is created!" << endl;
    }

    virtual ~Shape() {
        cout << "A shape is erased!" << endl;
    }

    static int getNumOfShapes() {
        return NumOfShapes;
    }

    virtual double getArea()=0;
};

int Shape::NumOfShapes = 0;

class Circle : public Shape {
private:
    static int NumOfCircles;
    double x;
public:
    Circle(double xtemp) : x(xtemp) {
        cout << "A circle is created!" << endl;
        NumOfCircles++;
    }

    ~Circle() {
        cout << "A circle is erased!" << endl;
    }

    static int getNumOfCircles() {
        return NumOfCircles;
    }

    double getArea() {
        return 3.14 * x * x;
    }

};

int Circle::NumOfCircles = 0;

class Square : public Shape {
private:
    static int NumOfSquares;
    double x;
public:
    Square(double xtemp) : x(xtemp) {
        cout << "A square is created!" << endl;
        NumOfSquares++;
    }

    ~Square() {
        cout << "A square is erased!" << endl;
    }

    static int getNumOfSquares() {
        return NumOfSquares;
    }

    double getArea() { return x * x; }

};

int Square::NumOfSquares = 0;

int main()
{
    int cases;
    char type;
    double data;
    Shape *shape;
    cin>>cases;
    cout<<"numOfShapes = "<<Shape::getNumOfShapes();
    cout<<", numOfCircles = "<<Circle::getNumOfCircles();
    cout<<", numOfSquares = "<<Square::getNumOfSquares()<<endl;
    for (int i = 0; i < cases; i++)
    {
        cin>>type>>data;
        switch(type)
        {
        case 'C':
            shape = new Circle(data);
            break;
        case 'S':
            shape = new Square(data);
            break;
        }
        cout<<"Area = "<<setprecision(2)<<fixed<<shape->getArea()<<endl;
        delete shape;
    }
    cout<<"numOfShapes = "<<Shape::getNumOfShapes();
    cout<<", numOfCircles = "<<Circle::getNumOfCircles();
    cout<<", numOfSquares = "<<Square::getNumOfSquares()<<endl;
}
